package main

import (
	"expense-tracker/routes"
	"expense-tracker/utils"
	"log"
	"net/http"

	_ "expense-tracker/docs" // docs is generated by Swag CLI, you have to import it.

	"github.com/gorilla/mux"
	httpSwagger "github.com/swaggo/http-swagger/v2"
)

// @title Expense Tracker API
// @version 1.0
// @description This is an API for an expense tracker application. This API allows users to create, read, update, and delete expenses. Users are able to sign up and log in to the application. Each user have their own set of expenses.
// @termsOfService http://swagger.io/terms/
// @contact.name Philip Oyelegbin
// @contact.url http://philipoyelegbin.com.ng
// @contact.email info@philipoyelegbin.com.ng
// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html
// @BasePath /api/v1
// @Security BearerAuth
// @securityDefinitions.apikey BearerAuth
// @in header
// @name Authorization
// @description Type "Bearer" and then your JWT token to authorize

func main() {
	env := utils.LoadEnv()
	router := mux.NewRouter()
	subRouter := router.PathPrefix("/api/v1").Subrouter()
	routes.RegisterAuthRoutes(subRouter)
	routes.RegisterUserRoutes(subRouter)
	routes.RegisterExpenseRoutes(subRouter)

	// setup swagger documentation
	subRouter.PathPrefix("/swagger/").Handler(httpSwagger.Handler(
		httpSwagger.DeepLinking(true),
		httpSwagger.DocExpansion("none"),
		httpSwagger.DomID("swagger-ui"),
	)).Methods(http.MethodGet)

	// redirect root to swagger docs
	router.HandleFunc("/", func(w http.ResponseWriter, r *http.Request) {
		http.Redirect(w, r, "/api/v1/swagger/index.html", http.StatusMovedPermanently)
	}).Methods(http.MethodGet)

	log.Println("Server is running on port", env.PORT)
	log.Fatal(http.ListenAndServe(":"+env.PORT, router))
}
